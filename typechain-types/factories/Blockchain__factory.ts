/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Blockchain, BlockchainInterface } from "../Blockchain";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "blocksize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getAccountBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256[3][]",
        name: "_transactions",
        type: "uint256[3][]",
      },
      {
        internalType: "uint256",
        name: "_blocksize",
        type: "uint256",
      },
    ],
    name: "init",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "kill",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transactions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610913806100326000396000f3fe6080604052600436106100555760003560e01c806320959aa21461005a5780633da7f06c1461008357806341c0e1b5146100b35780634903b0d1146100bd5780634eaf9db6146100dd578063c7569701146100fd575b600080fd5b34801561006657600080fd5b5061007060035481565b6040519081526020015b60405180910390f35b34801561008f57600080fd5b506100a361009e3660046106ed565b61011d565b604051901515815260200161007a565b6100bb610482565b005b3480156100c957600080fd5b506100706100d83660046107b0565b6104da565b3480156100e957600080fd5b506100706100f83660046107c8565b6104fb565b34801561010957600080fd5b506100706101183660046107b0565b610530565b600033806101685760405162461bcd60e51b8152602060048201526013602482015272556e617574686f72697365642041636365737360681b60448201526064015b60405180910390fd5b845161017b9060019060208801906105aa565b50600383905560005b8451811015610476578481815181106101ad57634e487b7160e01b600052603260045260246000fd5b60200260200101516002600381106101d557634e487b7160e01b600052603260045260246000fd5b602002015160018683815181106101fc57634e487b7160e01b600052603260045260246000fd5b602002602001015160006003811061022457634e487b7160e01b600052603260045260246000fd5b60200201518154811061024757634e487b7160e01b600052603260045260246000fd5b9060005260206000200154101561025d57610464565b84818151811061027d57634e487b7160e01b600052603260045260246000fd5b60200260200101516002600381106102a557634e487b7160e01b600052603260045260246000fd5b602002015160018683815181106102cc57634e487b7160e01b600052603260045260246000fd5b60200260200101516000600381106102f457634e487b7160e01b600052603260045260246000fd5b60200201518154811061031757634e487b7160e01b600052603260045260246000fd5b906000526020600020016000828254610330919061087f565b9250508190555084818151811061035757634e487b7160e01b600052603260045260246000fd5b602002602001015160026003811061037f57634e487b7160e01b600052603260045260246000fd5b602002015160018683815181106103a657634e487b7160e01b600052603260045260246000fd5b60200260200101516001600381106103ce57634e487b7160e01b600052603260045260246000fd5b6020020151815481106103f157634e487b7160e01b600052603260045260246000fd5b90600052602060002001600082825461040a9190610867565b92505081905550600285828151811061043357634e487b7160e01b600052603260045260246000fd5b6020908102919091018101518254600181018455600093845291909220610462926003928302909101916105f5565b505b8061046e81610896565b915050610184565b50600195945050505050565b6000546001600160a01b031633146104cc5760405162461bcd60e51b815260206004820152600d60248201526c2ab730baba3437b934b9b2b21760991b604482015260640161015f565b6000546001600160a01b0316ff5b600181815481106104ea57600080fd5b600091825260209091200154905081565b6002828154811061050b57600080fd5b9060005260206000209060030201816003811061052757600080fd5b01549150829050565b600033806105765760405162461bcd60e51b8152602060048201526013602482015272556e617574686f72697365642041636365737360681b604482015260640161015f565b6001838154811061059757634e487b7160e01b600052603260045260246000fd5b9060005260206000200154915050919050565b8280548282559060005260206000209081019282156105e5579160200282015b828111156105e55782518255916020019190600101906105ca565b506105f1929150610622565b5090565b82600381019282156105e557916020028201828111156105e55782518255916020019190600101906105ca565b5b808211156105f15760008155600101610623565b6000601f8381840112610648578182fd5b8235602061065d61065883610843565b610812565b828152818101908683016060808602890185018a101561067b578788fd5b875b868110156106de578a88840112610692578889fd5b61069a6107e9565b80848486018e8111156106ab578c8dfd5b8c5b60038110156106ca5782358552938a0193918a01916001016106ad565b50918852509587019593505060010161067d565b50919998505050505050505050565b600080600060608486031215610701578283fd5b833567ffffffffffffffff80821115610718578485fd5b818601915086601f83011261072b578485fd5b8135602061073b61065883610843565b8083825282820191508286018b848660051b890101111561075a57898afd5b8996505b8487101561077c57803583526001969096019591830191830161075e565b5097505087013592505080821115610792578384fd5b5061079f86828701610637565b925050604084013590509250925092565b6000602082840312156107c1578081fd5b5035919050565b600080604083850312156107da578182fd5b50508035926020909101359150565b6040516060810167ffffffffffffffff8111828210171561080c5761080c6108c7565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561083b5761083b6108c7565b604052919050565b600067ffffffffffffffff82111561085d5761085d6108c7565b5060051b60200190565b6000821982111561087a5761087a6108b1565b500190565b600082821015610891576108916108b1565b500390565b60006000198214156108aa576108aa6108b1565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220ba583f8c487a2685e4b7889c7368eac922ac9402234b4fcf21c2491658cf763a64736f6c63430008040033";

type BlockchainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BlockchainConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Blockchain__factory extends ContractFactory {
  constructor(...args: BlockchainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Blockchain";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Blockchain> {
    return super.deploy(overrides || {}) as Promise<Blockchain>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Blockchain {
    return super.attach(address) as Blockchain;
  }
  connect(signer: Signer): Blockchain__factory {
    return super.connect(signer) as Blockchain__factory;
  }
  static readonly contractName: "Blockchain";
  public readonly contractName: "Blockchain";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BlockchainInterface {
    return new utils.Interface(_abi) as BlockchainInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Blockchain {
    return new Contract(address, _abi, signerOrProvider) as Blockchain;
  }
}
